{"version":3,"file":"static/js/275.f7a04c69.chunk.js","mappings":"8TAAMA,EAAW,+BACXC,EAAM,mCACCC,EAAY,kCAAlB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAIH,EAAJ,qCAAyCC,IAGjE,SAASa,EAAoBC,GAClC,OAAOZ,EAAuB,GAAD,OACxBH,EADwB,iCACSC,EADT,kBACsBc,EADtB,gCAKxB,SAASC,EAA0BC,GACxC,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,oBAA0ChB,IAGlE,SAASiB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBH,EADwB,kBACNiB,EADM,4BACsBhB,IAG9C,SAASkB,EAAoBF,GAClC,OAAOd,EAAuB,GAAD,OACxBH,EADwB,kBACNiB,EADM,4BACsBhB,M,2GC/BrD,EAAwB,yBAAxB,EAA4D,4BAA5D,EAA8F,uB,SCG/E,SAASmB,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAClC,OACE,iBAAKC,UAAWC,EAAOC,KAAK,QAA5B,WACE,cAAGF,UAAWC,EAAd,2CACA,eAAGD,UAAWC,EAAd,qBAAmCF,MACnC,gBAAKI,IAAKC,EAAOC,IAAKN,S,2HCR5B,EAAwB,wBAAxB,EAAuD,uBAAvD,EAA2F,6BAA3F,EAAgI,wBAAhI,EAAkM,wBAAlM,EAAqO,2B,SCM/NO,EACK,UADLA,EAEM,WAFNA,EAGM,WAGG,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAcO,EAAd,KACA,GAA4BH,EAAAA,EAAAA,UAASF,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,EAAUP,IACVf,EAAAA,EAAAA,MACGwB,MAAK,SAAAC,GAAO,OAAIN,EAASM,EAAQC,YACjCF,KAAKF,EAAUP,IACfY,OAAM,SAAAd,GACLO,EAASP,GACTS,EAAUP,QAEb,IAECM,IAAWN,GACN,SAACa,EAAA,EAAD,IAGLP,IAAWN,GACN,SAACR,EAAA,EAAD,CAAWC,QAASK,EAAML,UAG/Ba,IAAWN,GAEX,iCACE,eAAIN,UAAWC,EAAf,4CACA,eAAID,UAAWC,EAAf,SACGQ,EAAMW,KAAI,SAAAC,GAAI,OACb,eAAkBrB,UAAWC,EAA7B,UACE,UAAC,KAAD,CACED,UAAWC,EACXqB,GAAE,iBAAYD,EAAKE,IACnBC,MAAO,CAAEC,KAAM,KAHjB,WAKE,gBACEzB,UAAWC,EACXE,IAAG,UAAKvB,EAAAA,IAAL,OAAiByC,EAAKK,aACzBrB,IAAKgB,EAAKM,OAASN,EAAK5B,QAG1B,gBAAKO,UAAWC,EAAhB,UACE,+BACE,eAAID,UAAWC,EAAf,SAA4BoB,EAAKM,OAASN,EAAK5B,eAd9C4B,EAAKE,iBANxB","sources":["services/film-api.jsx","webpack://goit-react-hw-05-movies/./src/views/ErrorView/ErrorView.module.css?5824","views/ErrorView/ErrorView.jsx","webpack://goit-react-hw-05-movies/./src/views/HomeView/HomeView.module.css?053b","views/HomeView/HomeView.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '61d280fbc4e0ab3fee827783c53f7600';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularFilmsForToday() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchFilmsByKeyWord(name) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchPrimaryInfoAboutFilm(movie_id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function fetchCastForFilm(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n}\nexport function fetchReviewsForFilm(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ErrorView_title__ym9Ef\",\"subtitle\":\"ErrorView_subtitle__1+WSk\",\"box\":\"ErrorView_box__Xk5wP\"};","import PropTypes from 'prop-types';\nimport error from '../../images/404.jpeg';\nimport s from './ErrorView.module.css';\n\nexport default function ErrorView({ message }) {\n  return (\n    <div className={s.box} role=\"alert\">\n      <p className={s.title}>Sorry, something went wrong.</p>\n      <p className={s.subtitle}>Error : {message}</p>\n      <img src={error} alt={message} />\n    </div>\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"HomeView_image__X7QLn\",\"list\":\"HomeView_list__fBQmW\",\"list__item\":\"HomeView_list__item__uyJAT\",\"decsr\":\"HomeView_decsr__keAtP\",\"rating\":\"HomeView_rating__SSF+4\",\"title\":\"HomeView_title__GXw8J\",\"subtitle\":\"HomeView_subtitle__+t3l8\"};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPopularFilmsForToday, IMAGE_URL } from '../../services/film-api';\nimport ErrorView from '../ErrorView/ErrorView';\nimport PendingView from '../PendingView/PendingView';\nimport s from './HomeView.module.css';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function HomeView() {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState({});\n  const [status, setStatus] = useState(Status.PENDING);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    fetchPopularFilmsForToday()\n      .then(request => setFilms(request.results))\n      .then(setStatus(Status.RESOLVED))\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, []);\n\n  if (status === Status.PENDING) {\n    return <PendingView />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <h2 className={s.title}>Most Populars films for today</h2>\n        <ul className={s.list}>\n          {films.map(film => (\n            <li key={film.id} className={s.list__item}>\n              <Link\n                className={s.title}\n                to={`movies/${film.id}`}\n                state={{ from: '/' }}\n              >\n                <img\n                  className={s.image}\n                  src={`${IMAGE_URL}${film.poster_path}`}\n                  alt={film.title || film.name}\n                />\n\n                <div className={s.decsr}>\n                  <>\n                    <h3 className={s.subtitle}>{film.title || film.name}</h3>\n                  </>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n"],"names":["BASE_URL","KEY","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilmsForToday","fetchFilmsByKeyWord","name","fetchPrimaryInfoAboutFilm","movie_id","fetchCastForFilm","fetchReviewsForFilm","ErrorView","message","className","s","role","src","error","alt","Status","HomeView","useState","films","setFilms","setError","status","setStatus","useEffect","then","request","results","catch","PendingView","map","film","to","id","state","from","poster_path","title"],"sourceRoot":""}