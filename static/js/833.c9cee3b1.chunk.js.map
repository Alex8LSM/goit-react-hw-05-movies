{"version":3,"file":"static/js/833.c9cee3b1.chunk.js","mappings":"8TAAMA,EAAW,+BACXC,EAAM,mCACCC,EAAY,kCAAlB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAIH,EAAJ,qCAAyCC,IAGjE,SAASa,EAAoBC,GAClC,OAAOZ,EAAuB,GAAD,OACxBH,EADwB,iCACSC,EADT,kBACsBc,EADtB,gCAKxB,SAASC,EAA0BC,GACxC,OAAOd,EAAuB,GAAD,OAAIH,EAAJ,kBAAsBiB,EAAtB,oBAA0ChB,IAGlE,SAASiB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBH,EADwB,kBACNiB,EADM,4BACsBhB,IAG9C,SAASkB,EAAoBF,GAClC,OAAOd,EAAuB,GAAD,OACxBH,EADwB,kBACNiB,EADM,4BACsBhB,M,yGC/BrD,GAAgB,MAAQ,0BAA0B,OAAS,2BAA2B,MAAQ,0BAA0B,KAAO,yBAAyB,OAAS,4B,kBCKlJ,SAASmB,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAoBE,GAASM,MAAK,SAAAC,GAAO,OAAIH,EAAWG,EAAQC,cAC/D,CAACR,KAEF,gBAAKS,UAAWC,EAAAA,QAAhB,SACGP,EAAQQ,OAAS,GAChB,+BACE,eAAIF,UAAWC,EAAAA,KAAf,SACGP,EAAQS,KAAI,SAACC,EAAMC,GAAP,OACX,gBAAgBL,UAAWC,EAAAA,KAA3B,WACE,iBAAKD,UAAWC,EAAAA,OAAhB,WACE,gBACED,UAAWC,EAAAA,OACXK,IACEF,EAAKG,eAAeC,YAChBJ,EAAKG,eAAeC,YAAYC,MAC9B,EACAL,EAAKG,eAAeC,YAAYN,QAElCQ,EAENC,IAAKP,EAAKQ,UAEZ,eAAIZ,UAAWC,EAAAA,MAAf,SAAyBG,EAAKQ,aAEhC,eAAGZ,UAAWC,EAAAA,MAAd,cAAyBG,EAAKS,aAhBvBR,WAsBf,eAAIL,UAAWC,EAAAA,KAAf,yD","sources":["services/film-api.jsx","webpack://goit-react-hw-05-movies/./src/views/ReviewView/ReviewView.module.css?b2e3","views/ReviewView/ReviewView.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '61d280fbc4e0ab3fee827783c53f7600';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularFilmsForToday() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchFilmsByKeyWord(name) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchPrimaryInfoAboutFilm(movie_id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function fetchCastForFilm(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n}\nexport function fetchReviewsForFilm(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"descr\":\"ReviewView_descr__si-6G\",\"author\":\"ReviewView_author__aW8eM\",\"title\":\"ReviewView_title__nAhV-\",\"item\":\"ReviewView_item__ET8KS\",\"avatar\":\"ReviewView_avatar__MkRu6\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsForFilm } from '../../services/film-api';\nimport s from './ReviewView.module.css';\nimport photo from '../../images/photo.png';\n\nexport default function ReviewView() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsForFilm(movieId).then(request => setReviews(request.results));\n  }, [movieId]);\n  return (\n    <div className={s.wrapper}>\n      {reviews.length > 0 ? (\n        <>\n          <ul className={s.list}>\n            {reviews.map((item, index) => (\n              <li key={index} className={s.item}>\n                <div className={s.author}>\n                  <img\n                    className={s.avatar}\n                    src={\n                      item.author_details.avatar_path\n                        ? item.author_details.avatar_path.slice(\n                            1,\n                            item.author_details.avatar_path.length\n                          )\n                        : photo\n                    }\n                    alt={item.author}\n                  />\n                  <h3 className={s.title}>{item.author}</h3>\n                </div>\n                <p className={s.descr}> {item.content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <h3 className={s.text}>We don't have any review for this movie</h3>\n      )}\n    </div>\n  );\n}\n"],"names":["BASE_URL","KEY","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchPopularFilmsForToday","fetchFilmsByKeyWord","name","fetchPrimaryInfoAboutFilm","movie_id","fetchCastForFilm","fetchReviewsForFilm","ReviewView","movieId","useParams","useState","reviews","setReviews","useEffect","then","request","results","className","s","length","map","item","index","src","author_details","avatar_path","slice","photo","alt","author","content"],"sourceRoot":""}